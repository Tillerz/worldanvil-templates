{% import _self as sheet %}
{% set sheetname = 'dnd5e-2024' %}
{% set style = variables.style|default('light') %}
{% set abilities = [ "Strength", "Dexterity", "Constitution", "Intelligence", "Wisdom", "Charisma" ] %}
{% set spell_abilities = [ ["NONE","NONE"], ["INT","Intelligence"], ["WIS", "Wisdom"], ["CHA", "Charisma"], ["CON", "Constitution"] ] %}
{% set xp_list = [ 0, 300, 900, 2700, 6500, 14000, 23000, 34000, 48000, 64000, 85000, 100000, 120000, 140000, 165000, 195000, 225000, 265000, 305000, 355000, 385000, 415000, 445000, 475000, 505000, 535000, 565000, 595000, 625000, 655000 ] %}
{% set skill_list = [ ["Acrobatics","dexterity"],["Animal Handling","wisdom"],["Arcana","intelligence"],["Athletics","strength"],["Deception","charisma"],["History","intelligence"],["Insight","wisdom"],["Intimidation","charisma"],["Investigation","intelligence"],["Medicine","wisdom"],["Nature","intelligence"],["Perception","wisdom"],["Performance","charisma"],["Persuasion","charisma"],["Religion","intelligence"],["Sleight of Hand","dexterity"],["Stealth","dexterity"],["Survival","wisdom"] ] %}
{% set masteries = {
    "-": "" ,
    "Cleave": "If you hit a creature with a melee attack roll using this weapon, you can make a melee attack roll with the weapon against a second creature within 5 feet of the first that is also within your reach. On a hit, the second creature takes the weapon's damage, but don't add your ability modifier to that damage unless that modifier is negative. You can make this extra attack only once per turn." ,
    "Graze": "If your attack roll with this weapon misses a creature, you can deal damage to that creature equal to the ability modifier you used to make the attack roll. This damage is the same type dealt by the weapon, and the damage can be increased only by increasing the ability modifier." ,
    "Nick": "When you make the extra attack of the Light property, you can make it as part of the Attack action instead of as a Bonus Action. You can make this extra attack only once per turn." ,
    "Push": "If you hit a creature with this weapon, you can push the creature up to 10 feet straight away from yourself if it is Large or smaller." ,
    "Sap": "If you hit a creature with this weapon, that creature has Disadvantage on its next attack roll before the start of your next turn." ,
    "Slow": "If you hit a creature with this weapon and deal damage to it, you can reduce its Speed by 10 feet until the start of your next turn. If the creature is hit more than once by weapons that have this property, the Speed reduction doesn't exceed 10 feet." ,
    "Topple": "If you hit a creature with this weapon, you can force the creature to make a Constitution saving throw (DC 8 plus the ability modifier used to make the attack roll and your Proficiency Bonus). On a failed save, the creature has the Prone condition." ,
    "Vex": "If you hit a creature with this weapon and deal damage to the creature, you have Advantage on your next attack roll against that creature before the end of your next turn."
  }
%}
{# --- calculate level andf find out if there is a bard --- #}
{% set level = 0 %}
{% set blevel = 0 %}
{% set level_1 = variables.level_1|default %}
{% if level_1 %}{% set level = level + level_1 %}{% endif %}
{% if 'bard' in variables.class_1|default|lower %}{% set blevel = level_1 %}{% endif %}
{% set level_2 = variables.level_2|default %}
{% if level_2 %}{% set level = level + level_2 %}{% endif %}
{% if 'bard' in variables.class_2|default|lower %}{% set blevel = level_2 %}{% endif %}
{% set level_3 = variables.level_3|default %}
{% if level_3 %}{% set level = level + level_3 %}{% endif %}
{% if 'bard' in variables.class_3|default|lower %}{% set blevel = level_3 %}{% endif %}
{% set level_4 = variables.level_4|default %}
{% if level_4 %}{% set level = level + level_4 %}{% endif %}
{% if 'bard' in variables.class_4|default|lower %}{% set blevel = level_4 %}{% endif %}
{% if level < 1 %}{% set level = 1 %}{% endif %}
{# jack of all trades #}
{% set joat = variables.jack_of_all_trades|default %}
{# attributes #}
{% set constitution = variables.constitution|default(10) %}
{% set dexterity = variables.dexterity|default(10) %}
{% set strength = variables.strength|default(10) %}
{% set intelligence = variables.intelligence|default(10) %}
{% set wisdom = variables.wisdom|default(10) %}
{% set charisma = variables.charisma|default(10) %}
{% set con_bonus = ((constitution - 10) // 2) %}
{% set dex_bonus = ((dexterity - 10) // 2) %}
{% set wis_bonus = ((wisdom - 10) // 2) %}
{% set str_bonus = ((strength - 10) // 2) %}
{% set ini_mod = variables.initiative_mod|default %}
{% if ini_mod == 0 %}{% set ini_mod = 0 %}{% endif %}{# possible replacement of "" to 0 #}
{% set ini = variables.initiative|default %}
{# fix for older sheets that had ini instead if ini_mod #}
{% if ini %}
    {% set ini_mod = ini - dex_bonus %}
    {% set ini = "" %}
{% endif %}
{% set inspiration_max = variables.inspiration_max|default(1) %}
{% if inspiration_max < 1 %}{% set inspiration_max = 1 %}{% endif %}
{# --- AC --- #}
{% set armor_class = 10 + dex_bonus %}{% set ac_txt = "10 + DEX Modifier (" ~ dex_bonus ~ ")" %}
{% set armor_name = 'none' %}
{% set shield_class = 0 %}
{% set shield_name = 'none' %}
{% set clistmax = 12 %}
{% for i in 1..clistmax %}
	{% set id = i %}{% if id < 10 %}{% set id = '0' ~ id %}{% endif %}
	{% set name = attribute(variables, 'armor_name_' ~ id)|default|trim %}
	{% if name != "" %}
		{% set aac = attribute(variables, 'armor_ac_' ~ id)|default|trim %}
		{% set worn = attribute(variables, 'armor_worn_' ~ id)|default|trim %}
		{% set type = attribute(variables, 'armor_type_' ~ id)|default|trim %}
		{% set dexmod = attribute(variables, 'armor_dexmod_' ~ id)|default|trim %}
		{% if worn == 1 %}
			{% if type == 's' %}
				{% set shield_name = name %}
				{% set shield_class = aac %}
			{% else %}
				{% set adex_bonus = dex_bonus %}
				{% set armor_name = name %}
				{% if type != 'l' and dexmod > 0 and adex_bonus > 2 %}{% set adex_bonus = 2 %}{% endif %}
				{% set armor_class = aac %}{% set ac_txt = aac %}
				{% if dexmod != 0 %}
					{% set armor_class = armor_class + adex_bonus %}
					{% set ac_txt = ac_txt ~ " + DEX Modifier (" ~ adex_bonus ~ ")" %}
				{% endif %}
			{% endif %}
		{% endif %}
	{% endif %}
{% endfor %}
{% set armor_class_mod = variables.armor_class_mod|default|number_format %}
{% if armor_class_mod %}
	{% set armor_class = armor_class + armor_class_mod|number_format %}
	{% set ac_txt = ac_txt ~ " + AC Mod. (" ~ armor_class_mod|number_format ~ ")" %}
{% endif %}
{% set shield_class = armor_class + shield_class %}
{# --- HIT POINTS --- #}
{% set chp = variables.hit_points_current|default %}
{% if variables.hit_points is defined and variables.hit_points != '' %}
	{# if the player/dm has entered hitpoints, use them #}
	{% set hp = variables.hit_points %}
	{% if not chp %}{% set chp = hp %}{% endif %}
{% else %}
	{# if the hp field is empty, automatically calculate them #}
	{% set cb = ((variables.constitution|default(10) - 10) / 2)|round(0, 'floor') %}
	{% set hp = cb + variables.hit_die_1|default(8) %}
	{% if level > 1 %}
		{% for i in 2..level %}
			{% set die = attribute(variables, 'hit_die_' ~ i)|default(8) / 2 %}
			{% set die = die+0.5|round(0, 'ceil') %}
			{% set hp = hp + cb + die %}
		{% endfor %}
	{% endif %}
{% endif %}
{% if chp == '' %}{% set chp = hp %}{% endif %}
{% if chp > hp %}{% set chp = hp %}{% endif %}
{# --- PROF BONUS + XP required for next level --- #}
{% set milestones = variables.milestones|default %}
{% set xpreq = 0 %}
{% set l = level %}
{% set pb = (1 + l / 4)|round(0, 'ceil') %}
{% set pbd = '' %}
{% set prof_dice_enabled = 0 %}
{% if variables.prof_dice_enabled is defined and variables.prof_dice_enabled == 1 %}
	{% set prof_dice_enabled = 1 %}
	{% set pbd = 'd4' %}
	{% if level >  4 %}{% set pbd = 'd6' %}{% endif %}
	{% if level >  8 %}{% set pbd = 'd8' %}{% endif %}
	{% if level > 12 %}{% set pbd = 'd10' %}{% endif %}
	{% if level > 16 %}{% set pbd = 'd12' %}{% endif %}
{% endif %}
{% set xpreq = xp_list[l]|default %}
{# --- SPELLCASTING --- #}
{% set sca = variables.spellcasting_ability|default %}
{% if sca != "NONE" %}
    {% set scm = attribute(variables, sca|lower) %}
	{% set scm_mod = variables.scm_mod|default %}
	{% if not scm_mod %}{% set scm_mod = 0 %}{% endif %}
	{% set scm = ((scm - 10) // 2) + scm_mod %}
	{% set ssdc = 8 + pb + scm %}
	{% if prof_dice_enabled == 1 %}
		{% if scm > -1 %}{% set scm = '+' ~ scm %}{% endif %}	
		{% set sam = pbd ~ scm %}
	{% else %}
		{% set sam = pb + scm %}
	{% endif %}
{% endif %}
{#
sca:	spellcasting ability (= wis, int, con, or cha)
scm:	spellcasting modifier (derived from sca, -4 to +4) + any additional bonus from feats, items etc
sam:	spell attack modifier (scm + proficiency)
#}
{# ---------------------------------------------- #}
{# 
  Macro to calculate the ability modifier.
  Parameters:
  - abi: The ability score.
  - add: Additional modifier to be added.
  - pbd: Proficiency bonus die.
#}
{% macro getMod( abi, add = '', pbd = '') %}
{% set mod = 0 %}
{% if abi is defined and abi != '' %}
	{% set mod = (abi - 10) // 2 %}
{% endif %}
{% if pbd != '' %}
	{% if add is defined and add != '' %}
		{% if mod > -1 %}{% set mod = '+' ~ mod %}{% endif %}
		{% set mod = mod ~ '+' ~ add %}
	{% endif %}
{% else %}
	{% if add is defined and add != '' %}
		{% set mod = mod + add %}
	{% endif %}
	{% if mod > -1 %}{% set mod = '+' ~ mod %}{% endif %}
{% endif %}
{{mod}}{% endmacro getMod %}
{# ---------------------------------------------- #}
{# 
  Macro: addSign
  Purpose: Adds a sign (+ or -) to the ability modifier and formats it for display.
  Parameters:
	- abi: The ability modifier value.
	- roll: Whether to include the roll notation (default is 'y' for yes).
	- pbd: Proficiency bonus die (optional).
#}
{% macro addSign( abi = 0, roll = 'y', pbd = '' ) %}
{% if pbd != '' %}
	{% set result = abi %}
	{% if result != '' %}{% set result = result|replace({'+0': ""}) %}{% endif %}
{% else %}
	{% if abi > 0 %} {% set result = '+' ~ abi %} {% elseif not abi %} {% set result = '+0' %}{% else %} {% set result =  abi %} {% endif %}
{% endif %}
{% set rc = '+' ~ result %}{% set rc = rc|replace({'++': "+", '+-': "-"}) %}
{% if result != '' %}{% set result = result|replace({'++': "+", '+-': "-"}) %}{% endif %}
{% if roll == 'y' %}[roll:1d20{{ rc }}|{{ result }}]{% else %}{{ result }}{% endif %}
{% endmacro addSign %}
{# ---------------------------------------------- #}
{% macro skillRoll( bonus = 0, abi = 0, default = 10, prof = 0, exp = 0, pb = 0, pbd = '', jack = 0, blevel = 0) %}
{% if not abi or abi < 0 %}{% set abi = default %}{% endif %}
{% if abi > 0 %}{% set bonus = bonus|number_format + (abi|number_format - 10) // 2 %}{% endif %}
{% set disbonus = '' %}
{% if pbd != '' %}
	{% if bonus > -1 %}{% set bonus = '+' ~ bonus %}{% endif %}
	{% if exp|default == '1' %}{% set bonus = bonus ~ '+2' ~ pbd %}
	{% elseif prof|default == '1' %}{% set bonus = bonus ~ '+' ~ pbd %}
	{% elseif jack|default == '1' and blevel > 1 %}
		{% set tmp = pbd // 2 %}
		{% if tmp > 0 %}
			{% set disbonus = bonus ~ '+' ~ tmp %}
			{% set bonus = bonus ~ '+' ~ tmp %}
		{% else %}
			{% set disbonus = bonus %}
		{% endif %}
	{% endif %}
{% else %}
	{% if exp == '1' %}{% set bonus = bonus + 2 * pb %}
	{% elseif prof == '1' %}{% set bonus = bonus + pb %}
	{% elseif jack == '1' and blevel > 1 %}{% set bonus = bonus + pb // 2 %}{% endif %}
	{% if bonus > -1 %}{% set bonus = '+' ~ bonus %}{% endif %}
{% endif %}
{% if bonus != '' %}
	{% set bonus = bonus|replace({' ':"", '	':"", '\xc2\xa0':""}) %}
	{% set bonus = bonus|replace({'+0+':"+", '+0-':"-", '++':"+", '+-':"-"}) %}
{% endif %}
{% if disbonus == '' %}{% set disbonus = bonus %}{% else %}
	{% set disbonus = disbonus|replace({' ':"", '	':"", '\xc2\xa0':""}) %}
	{% set disbonus = disbonus|replace({'+0+':"+", '+0-':"-", '++':"+", '+-':"-"}) %}
{% endif %}
{% if bonus != '' %}
	{% set bonus = bonus|replace({'+0':""}) %}
{% endif %}
<span title="Roll: 1d20{{bonus}}">[roll:1d20{{bonus}}|{{disbonus}}]</span>
{% endmacro skillRoll %}
{# ---------------------------------------------- #}
{# 
  Macro: abiModifier
  Purpose: Calculates the ability modifier and formats it for display.
  Parameters:
  - abi: The ability score (default is 10).
  - dice: The type of dice to roll (default is '20').
  - show: Whether to show the roll notation (default is false).
#}
{% macro abiModifier( abi = 10, dice = '20', show = false ) %}
	{% if abi is defined %}
		{% if abi == '' %}{% set abi = 10 %}{% endif %}
		{% set mod = (abi - 10) // 2 %}
		{% if mod > -1 %}{% set mod = '+' ~ mod %}{% endif %}
		{% set disbonus = mod %}
		{% set mod = mod|replace({'+0':""}) %}
		{% set disbonus = disbonus|replace({' ':"", '	':"", '\xc2\xa0':""}) %}
		{% set disbonus = disbonus|replace({'+0+':"+", '+0-':"-", '++':"+", '+-':"-"}) %}
		{% if show == false %}
			[roll:1d{{dice}}{{ mod }}|{{ disbonus }}]
		{% else %}
			[roll:1d{{dice}}{{ mod }}|1d{{dice}}{{ disbonus }}]
		{% endif %}
	{% else %}[roll:1d20|+0]{% endif %}
{% endmacro abiModifier %}
{# ---------------------------------------------- #}
{# 
  Macro: mark
  Purpose: Adds an icon indicating proficiency, expertise, or jack of all trades.
  Parameters:
  - prof: Proficiency status (1 if proficient, 0 otherwise).
  - exp: Expertise status (1 if expert, 0 otherwise).
  - pb: Proficiency bonus.
  - jack: Jack of all trades status (1 if applicable, 0 otherwise).
  - blevel: Bard level (used for jack of all trades calculation).
#}
{% macro mark( prof = 0, exp = 0, pb = 0, jack = 0, blevel = 0 ) %}
{% if exp == 1 %}
	<em class="fas fa-diamond" title="includes expertise bonus (2x proficiency bonus/die)"></em>
{% elseif prof == 1 %}
	<em class="fas fa-circle-check" title="includes proficiency bonus/die"></em>
{% else %}
	{% set j = (pb / 2)|round(0, 'floor') %}
	{% if jack and blevel > 1 and j > 0 %}
	<em class="fal fa-scrubber" title="jack of all trades: includes half proficiency bonus/die"></em>
	{% else %}
	<em class="fal fa-circle" title="not proficient"></em>
	{% endif %}
{% endif %}
{% endmacro mark %}
{# ---------------------------------------------- #}
{% macro attack(masteries, eo, id, prof = 0, name, abiname, mod1, dmg, dmgt, props = '', mastery = '', pb = 0, pbd = '', mod2 = 0, worn = 0) %}{% if name is defined and name != '' %}
{% set dmgtitle = "" %}{% set abiname = abiname|upper %}{% set col = '' %}{% if worn == 0 %}{% set col = 'faded' %}{% endif %}
{% if mod2 > 0 %}
    {% set dmgmod2 = (mod2 - 10) / 2 %}{% set dmgmod2 = dmgmod2|round(0, 'floor') %}
    {% set mod2 = (mod2 - 10) / 2 %}{% set mod2 = mod2|round(0, 'floor') %}
	{% if dmg != "" %}
		{% if dmgmod2 > 0 %}
			{% if abiname[:3] == "STR" or abiname[:3] == "DEX" %}
				{% set dmg = dmg ~ '+' ~ dmgmod2 %}
				{% set dmgtitle = "+" ~ dmgmod2 ~ " " ~ abiname[:3] ~ " MOD" %}
			{% endif %}
		{% elseif dmgmod2 < 0 %}
			{% if abiname[:3] == "STR" or abiname[:3] == "DEX" %}
				{% set dmg = dmg ~ dmgmod2 %}
				{% set dmgtitle = dmgmod2 ~ " " ~ abiname[:3] ~ " MOD" %}
			{% endif %}
		{% endif %}
	{% endif %}
{% else %}
    {% set mod2 = 0 %}
{% endif %}
{% set mod = (mod1|number_format) + (mod2|number_format) %}
<tr>
<td class="var {{eo}} {{col}} c">
{% if worn == 1 %}
	<em class="fa-regular fa-hand-fist" title="item worn/equipped"></em>
{% else %}
	<em class="fa-thin fa-backpack {{col}}" title="item not worn/equipped"></em>
{% endif %}
</td><td class="var {{eo}} {{col}} pb c">
{% if prof == 1 %}
	{% if mod > -1 %}{% set mod = '+'~mod %}{% endif %}
	{% if pbd != '' %}
		{% set mod = mod ~ '+' ~ pbd %}
		<em class="fas fa-circle {{col}}" title="includes +{{pbd}} proficiency die"></em>
	{% else %}
		{% set mod = mod + pb %}
		{% if mod > -1 %}{% set mod = '+'~mod %}{% endif %}
		<em class="fas fa-circle {{col}}" title="includes +{{pb}} proficiency bonus"></em>
	{% endif %}
{% else %}
	{% if mod > -1 %}{% set mod = '+'~mod %}{% endif %}
	<em class="fal fa-circle {{col}}" title="not proficient"></em>
{% endif %}</td>
    <td class="var {{eo}} {{col}}">{{name}}</td>{% set xmod = mod %}{% if mod == '+0' %}{% set mod = '' %}{% endif %}
    <td class="var {{eo}} {{col}} c" title="1d20{{mod}}">[roll:1d20{{mod}}|{{xmod}}]</td>  
    <td class="var {{eo}} {{col}} c">{{abiname[:3]}}</td>
    <td class="var {{eo}} {{col}} c" title="{{dmgtitle}}">[roll:{{dmg}}]</td>
    <td class="var {{eo}} {{col}} c">{{dmgt}}</td>
</tr>{% if props is defined and props != '' %}
<tr>
	<td colspan=2 class="var {{eo}} {{col}}">&nbsp;</td>
	<td colspan=4 class="var {{eo}} {{col}}">Properties: {{props}}</td>
	<td class="var {{eo}} {{col}} c" title='{{masteries[mastery]}}'>{% if mastery != "-" %}<span class='badge'>{{mastery}}</span>{% endif %}</td>
</tr>{% endif %}{% endif %}{% endmacro attack %}
{# ---------------------------------------------- #}
{# 
  Macro: armor
  Purpose: Displays the armor details in a table row.
  Parameters:
  - eo: Even or odd row class.
  - id: Armor ID.
  - name: Name of the armor.
  - ac: Armor class value.
  - props: Armor properties.
  - worn: Whether the armor is worn (1) or not .
  - type: Type of armor (light, medium, heavy, or shield).
  - adddex: Whether to add dexterity bonus (1) or not .
  - dex_bonus: Dexterity bonus value.
#}
{% macro armor(eo, id, name, ac, props, worn = 0, type = 'l', adddex = 0, dex_bonus = 0) %}<tr>
    <td class="var {{eo}} c">
	{% set col = '' %}
	{% if worn == 1 %}
		<em class="fa-regular fa-hand-fist" title="item worn/equipped"></em>
	{% else %}
		{% set col = 'faded' %}
		<em class="fa-thin fa-backpack {{col}}" title="item not worn/equipped"></em>
	{% endif %}
	</td>
    <td class="var {{eo}} {{col}} c">
		{% if type == 's' %}<em class="fa-sharp fa-solid fa-shield {{col}}" title="shield"></em>
		{% elseif type == 'l' %}<em class="fa-thin fa-helmet-battle {{col}}" title="light"></em>
		{% elseif type == 'm' %}<em class="fa-regular fa-helmet-battle {{col}}" title="medium"></em>
		{% elseif type == 'h' %}<em class="fa-solid fa-helmet-battle {{col}}" title="heavy"></em>{% else %}&nbsp;{% endif %}
	</td>
    <td class="var {{eo}} {{col}} l">{{name}}</td>{% set tmp = ac %}{% if adddex == 1 %}{% set tmp = ac + dex_bonus %}{% endif %}
    <td class="var {{eo}} {{col}} c">{% if type == 's' %}+{%endif%}{{tmp}}</td>
    <td class="var {{eo}} {{col}} c">
		{% if adddex == 1 %}<em class="fas fa-circle {{col}}" title="includes DEX Modifier of +{{dex_bonus}}"></em>{% else %}<em class="fal fa-circle {{col}}" title="no DEX Bonus added"></em>{% endif %}
	</td>
    <td class="var {{eo}} {{col}} l">{{props}}</td>
</tr>{% endmacro armor %}
{# ---------------------------------------------- #}
{% macro spell(id, counter = 0, spell_level = '', spell_name = '', spell_id = '', spell_ability = '', scm = '', scm_mod = 0, pb = '', pbd = '', spell_prepared = 0, spell_casting_time = '', spell_range = '', spell_duration = '', spell_damage = '', spell_damage_scm = "", spell_damage_higher = '', spell_damage_scaled = '', spell_components = '', spell_component_sets = '', spell_notes = '') %}{% if spell_prepared == 1 %}
<tr>{% set eo = "od" %}{% if counter is even %}{% set eo = "ev" %}{% endif %}{% set spell_ability = spell_ability|upper %}
{% if scm > 0 %}
	{% set scm = (scm - 10) / 2 + scm_mod %}{% set scm = scm|round(0, 'floor') %}
	{% set scm = scm|replace({'+0': ""}) %}
	{% if scm > 0 %}{% set scm = '+' ~ scm %}{% endif %}
	{% set sam = '' %}
	{% if pbd != '' %}
		{% set sam = '+' ~ pbd ~ scm %}
		{% set lbl = 'dice' %}
	{% else %}
		{% set sam = pb + scm %}
		{% if sam > 0 %}{% set sam = '+' ~ sam %}{% endif %}
		{% set lbl = 'bonus' %}
	{% endif %}
	{% if spell_damage and spell_damage != "-" %}
		{% if spell_damage_scm > 0 %}{% set spell_damage = spell_damage ~ scm %}{% endif %}
	{% endif %}
{% endif %}
	{% set txt = "" %}
	{% if spell_damage_scaled == "" %}
		{% set rolldamage = spell_damage %}
	{% else %}
		{% set rolldamage = spell_damage ~ spell_damage_scaled %}
		{% set txt = "*" %}
	{% endif %}
    <td class="{{eo}} lg">
	<div title="Name of the spell">{% if spell_id > 0 %} [blocklink:{{spell_id}}] {% else %}{{spell_name}}{% endif %}</div>
	{% if txt !="" %}<font title="Scaled up"><i class="fas fa-arrow-alt-circle-up"></i></font>{% endif %}
	</td>
    <td class="{{eo}} c" title="Spell Attack"><div title="Roll: 1d20 + {{spell_ability}} mod + prof {{lbl}}">[roll:1d20{{sam}}|{{sam}}]</div></td>
    <td class="{{eo}} c" title="Casting time">{{ spell_casting_time }}</td>
    <td class="{{eo}} c" title="Range">{{ spell_range }}</td>
    <td class="{{eo}} c" title="Duration">{{ spell_duration }}</td>
	<td class="{{eo}} c" title="Damage or healing power: {{rolldamage}}">{% if spell_damage != "" and spell_damage != "-" %}[roll:{{rolldamage}}|{{spell_damage}}] {% if txt !="" %}+ <font title="Scaled up: {{spell_damage_scaled}}"><i class="fas fa-arrow-alt-circle-up"></i></font>{% endif %} {% endif %}</td>
    <td class="{{eo}} c" title="Required components (verbal, somatic, material)">{{ spell_components }}</td>
    <td class="{{eo}} c" title="Components for how many casts available">{{ spell_component_sets }}</td>
</tr>{% if spell_notes != "" %}<tr><td colspan=1 class="{{eo}}">&nbsp;</td><td colspan=1 class="{{eo}} r">Notes:&nbsp;&nbsp;&nbsp;</th><td colspan=10 class="{{eo}}">{{ spell_notes }}</td></tr>{% endif %}
{% endif %}{% endmacro spell %}
{# ---------------------------------------------- #}
{# --- sheet -- #}
<div class="container-fluid {{sheetname}}-{{style}}">
    <!-- Header -->
	<button title="Minimize header section" class="minimize btn btn-link collapsed buttlight" data-toggle="collapse" data-bs-toggle="collapse" data-target="#collapsePersonal" href="#collapsePersonal" role="button" aria-expanded="true" aria-controls="collapsePersonal"><em class="fas fa-angle-down"></em></button>
	<div class="row collapse show" id="collapsePersonal">
		{% if variables.imageid|default > 0 %}{% set wd = 8 %}{% else %}{% set wd = 12 %}{% endif %}
		<div class="col-12 col-md-12 col-lg-{{wd}}">
			<div class="card my-2 logo noborder hidden-xs hidden-sm hidden-md d-none d-lg-block"> D&amp;D 5e 2024</div>
			<div class="row">
				<div class="col-12 col-md-6 col-lg-6">
					<div class="card personal">
						<div class="card-header hdr">{{ variables.name|default }}</div>
						<div class="card-body nobg">
							<table class="table">
								<tr>
									<td class="lbl od" width="30%">Level</td>
                                                                        {% set tmp = '' %}{% if milestones < 1 %}{% set tmp = ' (' ~ variables.xp|default('0') ~ '/' ~ xpreq|default('?') ~ ' XP for level-up)' %}{% endif %}
									<td class="var od">{{ level|default('1') }}{{tmp}}</td>
								</tr>
								<tr>
									<td class="lbl ev">Background</td>
									<td class="var ev">{{ variables.background|default }}</td>
								</tr>
								<tr>
									<td class="lbl od">Size</td>
									<td class="var od">{{ variables.size|default }}</td>
								</tr>
								<tr>
									<td class="lbl ev">Species</td>
									<td class="var ev">{{ variables.species|default }}</td>
								</tr>
							</table>
						</div>
					</div>
				</div>
				<div class="col-12 col-md-6 col-lg-6">
					<div class="row">
						{% for i in 1..4 %}
							{% if attribute(variables, 'class_' ~ i)|default != '' %}
						<div class="col-6 col-xs-6 col-sm-3 col-md-6 col-lg-6">
							<div class="card class">
								<div class="card-header hdr">{{ attribute(variables, 'class_' ~ i)|default }}</div>
								<div class="card-body nobg">
									<table class="table">
										{% if attribute(variables, 'subclass_' ~ i)|default != "" %}
										<tr>
											<td class="lbl od" width="30%">Subclass</td>
											<td class="var od">{{ attribute(variables, 'subclass_' ~ i)|default }}</td>
										</tr>
										{% endif %}
										<tr>
											<td class="lbl ev">Level</td>
											<td class="var ev c">{{ attribute(variables, 'level_' ~ i)|default }}</td>
										</tr>
										<tr>{% set hd = attribute(variables, 'level_' ~ i)|default %}{% set hd1 = variables.hit_dice_remaining|default %}{% if hd1 %}{% set hd = hd1 %}{% endif %}
											<td class="lbl od">Hit dice</td>
											<td class="var od c">{{hd}}/{{ attribute(variables, 'level_' ~ i)|default('1') }}</td>
										</tr>
										<tr>
											<td class="var ev c" colspan=2 title="The Hit die + bonus, eg 1d8+2">{{ sheet.abiModifier( constitution, attribute(variables, 'hit_die_' ~ i)|default, true ) }}</td>
										</tr>
									</table>
								</div>
							</div>
						</div>
							{% endif %}
						{% endfor %}
					</div>
				</div>
			</div>
		</div>
		{% if variables.imageid|default > 0 %}
		<div class="col-12 col-xs-12 col-md-6 col-lg-4 hidden-xs hidden-sm hidden-md d-none d-lg-block">
			[img:{{variables.imageid}}]
		</div>
		{% endif %}
	</div>
	<hr class="do-not-print">
	<div class="row">
        {% for a in abilities %}
		<div class="col-6 col-xs-6 col-sm-4 col-md-2 col-lg-2">
			<div class="card class">
				<div class="card-header hdr" title="{{a}}">{{a[:3]|upper}} {{ attribute(variables, a|lower) }}</div>
				<div class="card-body c">
					<div class="attmod strong lh">{{ sheet.abiModifier( attribute(variables, a|lower) ) }}</div>
					<small>{{a[:3]|upper}} save: {{ sheet.mark( attribute(variables, a|lower ~ '_save_prof')|default, 0, pb ) }} {{ sheet.skillRoll( attribute(variables, a|lower ~ '_save_mod')|default, attribute(variables, a|lower)|default, 10, attribute(variables, a|lower ~ '_save_prof')|default, 0, pb, pbd, 0 ) }}</small>
				</div>
			</div>
		</div>
        {% endfor %}
	</div>
	<hr class="do-not-print">
	<div class="row">
		<div class="col-6 col-xs-6 col-sm-4 col-md-3">
			<div class="card c">
				{% if variables.initiative_score %}
					<div class="card-header">Initiative Score</div>
					<div class="var od">{{ 10 + dex_bonus + ini_mod }}</div>
				{% else %}
					<div class="card-header">Initiative (DEX)</div>
					<div class="var od">{{ sheet.addSign( dex_bonus|number_format + ini_mod|number_format ) }}</div>
				{% endif %}
			</div>
			<div class="card c">
				<div class="card-header" title="Speed in ft">Speed</div>
				<div class="var od">{{ variables.speed|default(10) }}</div>
			</div>
			<div class="card c">
				<div class="card-header" title="Passive Perception">Passive Perception</div>
				{% set ppb = variables.pp_bonus|default|number_format %}
				{% set pp = 10 + wis_bonus|number_format + ppb %}
				{% if variables.perception_prof|default > 0 %}{% set pp = pp + pb %}{% endif %}
				<div class="var od">{{pp}}</div>
			</div>
			<div class="card c">
				<div class="card-header">Heroic Inspiration</div>
				<div class="var od">
					{% for i in 1..inspiration_max %}
						{% set id = i %}{% if id < 10 %}{% set id = '0' ~ id %}{% endif %}
						{% if attribute(variables, 'inspiration_' ~ id)|default|default == 1 %}<i class="fa-solid fa-circle-check"></i>{% else %}<i class='fa-regular fa-circle'></i>{% endif %}
					{% endfor %}
				</div>
			</div>
		</div>
		<div class="col-6 col-xs-6 col-sm-4 col-md-3">
			<div class="card c">
				<div class="card-header">Armor Class (AC)</div>
				<span class='ac' title='{{ac_txt}}'>{{ armor_class }}</span>
				{% if armor_name != '' and armor_name != 'none' %}<div class="var ev c">{{ armor_name }}</div>{% endif %}
    			{% if shield_name != '' and shield_name != 'none' %}
				<div class="lbl ev c">Armor Class w/Shield</div>
				{{ shield_class }}
				<div class="var ev c">{{ shield_name }}</div>
				{% endif %}
			</div>
		</div>
		<div class="col-12 col-xs-6 col-sm-4 col-md-3">
			<div class="card c">
				<div class="card-header">Hit Points</div>
				<div class="var od c hp">{{chp}} / {{ hp }}</div>
				<div class="lbl od c">Death Saves</div>
				<div class="row">
					<div class="col-6">
						<div class="var od c">
							{% for i in 1..3 %}
								{% if attribute(variables, 'dss' ~ i)|default|default == 1 %}<i class="fa-solid fa-circle-check"></i></i>{% else %}<i class='fa-regular fa-circle'></i>{% endif %}
							{% endfor %}
						</div>
						<div class="lbl od c">Succeeded</div>
					</div>
					<div class="col-6">
						<div class="var od c">
							{% for i in 1..3 %}
								{% if attribute(variables, 'dsf' ~ i)|default|default == 1 %}<i class='fa-solid fa-circle-xmark'></i>{% else %}<i class='fa-regular fa-circle'></i>{% endif %}
							{% endfor %}
						</div>
						<div class="lbl od c">Failed</div>
					</div>
				</div>
			</div>
		</div>
		<div class="col-6 col-xs-6 col-sm-4 col-md-3">
			{% if variables.conditions %}
			<div class="card c">
				<div class="card-header">Conditions</div>
				<div class="var od c">{{ variables.conditions|default }}</div>
			</div>
			{% endif %}
			<div class="card">
				<div class="card-header">Exhaustion</div>
				<div class="var od c">
					{% for i in 1..6 %}
						{% set id = i %}{% if id < 10 %}{% set id = '0' ~ id %}{% endif %}
						{% if attribute(variables, 'exhaustion_' ~ id)|default|default == 1 %}<i class='fa-solid fa-circle-xmark'></i>{% else %}<i class='fa-regular fa-circle'></i>{% endif %}
					{% endfor %}
				</div><br>
			</div>
		</div>
		{% for i in 1..9 %}
			{% if i == 1 %}
				{% set label = variables.class_resource_label|default %}
				{% set res = variables.class_resource|default %}
				{% set curr = variables.class_resource_curr|default(res) %}
			{% else %}
				{% set label = attribute(variables, 'class_resource_label_' ~ i)|default %}
				{% set res = attribute(variables, 'class_resource_' ~ i)|default %}
				{% set curr = attribute(variables, 'class_resource_curr_' ~ i)|default(res) %}
			{% endif %}
			{% if label != '' %}
				<div class="col-6 col-xs-6 col-sm-4 col-md-3">
					<div class="card">
						<div class="strong">{{curr}} / {{res}}</div><br>
						<div class="card-header">{{label}}</div>
					</div>  
				</div>
			{% endif %}
		{% endfor %}
	</div>
	<hr class="do-not-print">
	<div class="row">
		<div class="col-12 col-md-6">
			{% if sca|upper != "NONE" %}
			<div class="card c">
				<div class="card-header">Spellcasting
					{% if variables.spell_points_max|default > 0 %}
						(Points: <div class="strong">{{ variables.spell_points_curr|default(variables.spell_points_max) }}/{{ variables.spell_points_max }} )</div>
					{% endif %}
				</div>
				<div class="row">
					<div class="col-12 col-sm-3 col-lg-3 c">
						<div class="lbl od" title="Spell Attack Modifier">Attack mod</div>
						<div class="var od">{{ sheet.addSign(sam, 'y', pbd) }}</div>
					</div>
					<div class="col-12 col-sm-3 col-lg-3 c">
						<div class="lbl od" title="Spell Ability">Ability</div>
						<div class="var od"> {{sca[:3]|upper}}</div>
					</div>
					<div class="col-12 col-sm-3 col-lg-3 c">
						<div class="lbl od" title="Spell Ability Modifier from ability + modifiers">Abi Mod</div>
						<div class="var od">+{{scm}}</div>
					</div>
					<div class="col-12 col-sm-3 col-lg-3 c">
						<div class="lbl od" title="Spell Save DC">Save DC</div>
						<div class="var od">{{ssdc}}</div>
					</div>
				</div>
			</div>
			{% endif %}
			<div class="card">
				<div class="card-header">Attacks</div>
				<div class="card-body nobg">
					<table width="100%">
						<tr>
							<th class="hdr w30 c" title="item worn/equipped">W</th>
							<th class="hdr w30 c" title="proficient (adds prof. bonus)">Pr</th>
							<th class="hdr">Weapon / Attack</th>
							<th class='hdr c' title="Attack Bonus">AB</th>
							<th class='hdr c' title="Ability">Abi</th>
							<th class='hdr c'>Dmg</th>
							<th class='hdr c'>Dmg Type</th>
						</tr>
						{% set clistmax = 40 %}{% set eo = 'od' %}
						{% for i in 1..clistmax %}
							{% set id = i %}{% if id < 10 %}{% set id = '0' ~ id %}{% endif %}
							{% set name = attribute(variables, 'attack_' ~ id)|default|trim %}
							{% if name != "" %}
								{{ sheet.attack(masteries, eo, id,
									attribute(variables, 'attack_prof_' ~ id)|default,
									attribute(variables, 'attack_' ~ id)|default,
									attribute(variables, 'attack_abi_' ~ id)|default,
									attribute(variables, 'attack_mod_' ~ id)|default,
									attribute(variables, 'attack_dmg_' ~ id)|default,
									attribute(variables, 'attack_dmg_type_' ~ id)|default,
									attribute(variables, 'attack_props_' ~ id)|default,
									attribute(variables, 'attack_mastery_' ~ id)|default,
									pb, pbd,
									attribute(variables, attribute(variables, 'attack_abi_' ~ id)|default|lower)|default,
									attribute(variables, 'attack_worn_' ~ id)|default,
								) }}
								{% if eo == 'od' %}{% set eo = 'ev' %}{% else %}{% set eo = 'od' %}{% endif %}
							{% endif %}
						{% endfor %}
					</table>
				</div>
			</div>
			<div class="card">
				<div class="card-header">Armor
				{% if armor_class_mod != '' %}
				( AC Mod: {{ sheet.addSign(armor_class_mod, 'n') }} )
				{% endif %}
				</div>
				<div class="card-body nobg">
					<table width="100%">
						<tr>
							<th class='hdr w30 c' title='item worn/equipped'>W</th>
							<th class='hdr w30 c' title='type: light, medium, heavy, or shield'>T</th>
							<th class="hdr">&nbsp;Armor</th>
							<th class='hdr c'>AC</th>
							<th class='hdr w30 c' title='including DEX Mod.'>D</th>
							<th class="hdr">Properties</th>
						</tr>
						{% set clistmax = 12 %}{% set eo = 'od' %}
						{% for i in 1..clistmax %}
							{% set id = i %}{% if id < 10 %}{% set id = '0' ~ id %}{% endif %}
							{% set name = attribute(variables, 'armor_name_' ~ id)|default|trim %}
							{% if name != "" %}
								{{ sheet.armor(eo, id,
									name,
									attribute(variables, 'armor_ac_' ~ id)|default,
									attribute(variables, 'armor_props_' ~ id)|default,
									attribute(variables, 'armor_worn_' ~ id)|default,
									attribute(variables, 'armor_type_' ~ id)|default,
									attribute(variables, 'armor_dexmod_' ~ id)|default,
									dex_bonus
								) }}
								{% if eo == 'od' %}{% set eo = 'ev' %}{% else %}{% set eo = 'od' %}{% endif %}
							{% endif %}
						{% endfor %}
					</table>
				</div>
			</div>
		</div>
		<div class="col-12 col-md-6">
			<div class="card">
				<div class="card-header">Skills</div>
				<div class="card-body nobg">
					<table width="100%" class="skilltable">
						<tr>
							<th class="hdr od w30 c" title="proficient/expert (adds proficiency/expertise bonus)">P/E</th>
							<th class="hdr od w50 c" title="Skill Bonus">Bonus</th>
							<th class="hdr od">Skill</th>
							<th class="hdr od w90 c" title="Ability">Abi</th>
						</tr>
						{% set eo = 'od' %}
						{% for k in skill_list %}
							{% set sk = k[0]|default %}
							{% set skl = sk|lower|replace({' ': '_'}) %}
							{% set ab = k[1]|default %}
							{% set abi = attribute(variables, skl ~ '_abi')|default %}
							{% set sk = k[0]|default %}
							<tr>
								<td class="var {{eo}} pb c">{{ sheet.mark( attribute(variables, skl ~ '_prof')|default, attribute(variables, skl ~ '_exp')|default, pb, joat, blevel ) }}</td>
								<td class="var {{eo}} c">{{ sheet.skillRoll( attribute(variables, skl)|default, attribute(variables, abi)|default, attribute(variables, ab), attribute(variables, skl ~ '_prof')|default, attribute(variables, skl ~ '_exp')|default, pb, pbd, joat, blevel ) }}</td>
								<td class="var {{eo}}">{{sk}}</td>
								<td class="var {{eo}} c">{{ab[:3]|upper}}</td>
							</tr>
							{% if eo == 'od' %}{% set eo = 'ev' %}{% else %}{% set eo = 'od' %}{% endif %}
						{% endfor %}
						{% set clistmax = 50 %}{% set eo = 'od' %}
						{% for i in 1..clistmax %}
							{% set id = i %}{% if id < 10 %}{% set id = '0' ~ id %}{% endif %}
							{% set name = attribute(variables, 'skill_name_' ~ id)|default|trim %}
							{% if name != "" %}
								<tr>
									{% set prof = attribute(variables, "skill_prof_" ~ id)|default %}
									{% set exp = attribute(variables, "skill_exp_" ~ id)|default %}
									{% set abi = attribute(variables, "skill_abi_" ~ id)|default %}
									{% set value = attribute(variables, "skill_value_" ~ id)|default %}
									<td class="var {{eo}} pb c">{{ sheet.mark( prof, exp, pb, joat, blevel ) }}</td>
									<td class="var {{eo}} c">{{ sheet.skillRoll( value, attribute(variables, abi )|default, 10, prof, exp, pb, pbd, joat, blevel ) }}</td>
									<td class="var {{eo}}">{{name}}</td>
									<td class="var {{eo}} c">{{abi[:03]|upper}}</td>
								</tr>
								{% if eo == 'od' %}{% set eo = 'ev' %}{% else %}{% set eo = 'od' %}{% endif %}
							{% endif %}
						{% endfor %}
					</table>
					<br>
					<table width="100%">
					<tr>
						<td width="30px"><em class="fas fa-diamond"></em></td>
						<td><div class="strong pull-left">
						{% if pbd != '' %}
						{{ sheet.addSign( '2' ~ pbd, '', pbd ) }}
						{% else %}
						{{ sheet.addSign( 2*pb, '' ) }}
						{% endif %} Expertise Bonus</div></td>
						<td width="30px"><i class="fa-solid fa-circle-check"></i></td>
						<td><div class="strong pull-left">
						{% if pbd != '' %}
						{{ sheet.addSign( pbd, '', pbd ) }}
						{% else %}
						{{ sheet.addSign( pb, '' ) }}
						{% endif %} Proficiency Bonus</div></td>
					{% set j = pb / 2 %}{% set j = j|round(0, 'floor') %}
					{% if joat is defined and joat == 1 and j > 0 and level > 1 %}
						<td width="30px"><em class="fal fa-scrubber"></em></td>
						<td><div class="strong pull-left">
						{% if pbd != '' %}
						{{ sheet.addSign( pbd ~ '/2', '', pbd ) }}
						{% else %}
						{{ sheet.addSign( j, '' ) }}
						{% endif %} Jack of all Trades</div></td>
					</tr>
					{% endif %}
					</table>
				</div>
			</div>
		</div>
	</div>
</div>
{% if sca != "NONE" %}
<div class="pagebreak"></div>
<div class="container-fluid {{sheetname}}-{{style}}">
	<div class="card pd0">
		<div class="card-header">Spell Book <button title="Click me!" class="minimize btn btn-link collapsed buttlight" data-toggle="collapse" data-bs-toggle="collapse" data-target="#collapseSpells" href="#collapseSpells" role="button" aria-expanded="true" aria-controls="collapseSpells"><em class="fas fa-book"></em></button></div>
		<div class="row spell-row card-body nobg collapse hide" id="collapseSpells">
			<div class="col-12 col-xs-12" id="spells">
				<!-- Spells -->
				<div class="container pd0 of">
					<div class="form-group of">
						<table width="100%" class="attacktable" id="spelltable">
							{% for i in 0..9 %}
								{% if i == 0 %}
									{# always show cantrips #}
									{% set sl = "C" %}
									{% set show = 99 %}
									{% set title = "Cantrips" %}
									{% set slots = "" %}
								{% else %}
									{% set sl = i %} {# we are looking for spells matching slot sl #}
									{% set show = attribute (variables, 'total_spell_slots_' ~ i)|default %} {# the total of spell slot entries the user has #}
									{% set title = "Level " ~ i ~ " Spells" %}
									{% set slots = show ~ " slots" %}
								{% endif %}
								{# only show spells that are cantrips or the user has a total of spell slot entries for them #}
								{% set counter = 1 %} {# start counting at 1 for each spell level #}
								{% if show > 0 %}
									{# walk through all spell entries #}
									{% for k in 1..60 %}
										{% set id = k %}{% if id < 10 %}{% set id = '0' ~ id %}{% endif %}
										{% set name = attribute(variables, "spell_name_" ~ id)|default %}
										{# do not show spells without a name #}
										{% if name != "" %} 
											{% set t = attribute(variables, "spell_level_" ~ id)|default|upper %} {# level of the spell #}
											{% set scales = attribute(variables, "spell_damage_higher_" ~ id)|default %} {# this spell scales? #}
											{# level matches OR level is lower (and not a cantrip) and also is a scalable spell #}
											{% if t == sl or ( scales != "" and sl != "C" and t < sl ) %}
												{# add header to each spell level and then every 10 spells #}
												{% if counter == 1 %}{% set done = 0 %}{% endif %}
												{% if done == 0 %}
													{% set done = 1%}
													<tr><th colspan=9 class="hdr c"><h2>{{title}}{% if slots !="" %} <div class="badge">{{slots}}</div></h2>{% endif %}
													</th></tr>
													<tr>
														<th title="Name of the spell" width="15%" class="hdr pdl10">NAME</th>
														<th title="Spell Attack Bonus" class="hdr w90 c">AB</th>
														<th title="Casting time" class="hdr c">CAST</th>
														<th title="Range" class="hdr c">RNG</th>
														<th title="Duration" class="hdr c">DUR</th>
														<th title="Damage or healing power (rollable)" class="hdr w120 c">DMG</th>
														<th title="Required components (verbal, somatic, material)" class="hdr w90 c">CMP</th>
														<th title="Components for how many casts available" class="hdr w60 c">#</th>
													</tr>
												{% endif %}
												{# set damage depending on matching level or scaled up spell #}
												{% set scale_dmg = "" %}
												{% if t < sl %}
												 	{# spell is scaled up #}
													{% set scale_dmg = '' %}{# attribute(variables, "spell_damage_" ~ id) #}
													{% for l in 1..(sl - t) %}{% set scale_dmg = scale_dmg ~ '+' ~ scales %}{% endfor %}
												{% endif %}
                                                {% set tmp = attribute(variables, "spell_ability_" ~ id )|default|lower %}{% if tmp == "none" %}{% set tmp = sca|lower %}{% endif %}
												{{ sheet.spell( id, counter,
													sl,
													attribute(variables, "spell_name_" ~ id)|default,
													attribute(variables, "spell_id_" ~ id)|default,
													attribute(variables, "spell_ability_" ~ id )|default,
													attribute(variables, tmp )|default,
													scm_mod,
													pb,
													pbd,
													attribute(variables, "spell_prepared_" ~ id)|default,
													attribute(variables, "spell_casting_time_" ~ id)|default,
													attribute(variables, "spell_range_" ~ id)|default,
													attribute(variables, "spell_duration_" ~ id)|default,
													attribute(variables, "spell_damage_" ~ id)|default,
													attribute(variables, "spell_damage_scm_" ~ id)|default,
													attribute(variables, "spell_damage_higher" ~ id)|default,
													scale_dmg,
													attribute(variables, "spell_components_" ~ id)|default,
													attribute(variables, "spell_component_sets_" ~ id)|default,
													attribute(variables, "spell_notes_" ~ id|default)
												) }}
												{% set counter = counter + 1 %}
											{% endif %}
										{% endif %}
									{% endfor %}
								{% endif %}
							{% endfor %}
						</table>
					</div>                  
				</div>
			</div>
		</div>
	</div>
</div>
{% endif %}
<div class="pagebreak"></div>
<div class="container-fluid {{sheetname}}-{{style}}">
	<div class="row">
		<div class="col-12 col-md-12 col-lg-6">
			<div class="card of">
				<div class="card-header">Money</div>
				<div class="var od c">
					{{variables.copper_label ?? 'Copper' }}: {{ variables.copper_pieces ?? 0 }},
					{{variables.silver_label ?? 'Silver' }}: {{ variables.silver_pieces ?? 0 }},
					{{variables.electrum_label ?? 'Electrum' }}: {{ variables.electrum_pieces ?? 0 }},
					{{variables.gold_label ?? 'Gold' }}: {{ variables.gold_pieces ?? 0 }},
					{{variables.platinum_label ?? 'Platinum' }}: {{ variables.platinum_pieces ?? 0 }}
				</div>
				{% set x = 0 %}
                {% for i in 1..5 %}{% set id = i %}{% if id < 10 %}{% set id = '0' ~ id %}{% endif %}
					{% if attribute(variables, 'bastion_' ~ id)|default > 0 %}{% set x = 1 %}{% endif %}
                {% endfor %}
				{% if x > 0 %}
                    <!-- Bastion -->
					<div class="card-header">Bastions</div>
					<div class="card-body">
						{% for i in 1..5 %}
							{% set id = i %}{% if id < 10 %}{% set id = '0' ~ id %}{% endif %}
							{% set bastionid = attribute(variables, 'bastion_' ~ id)|default %}
							{% if bastionid > 0 %} [blocklink:{{bastionid}}]<br> {% endif %}
						{% endfor %}
					</div>                      
				{% endif %}
				<div class="card-header">Treasure and Equipment</div>
				<div class="card-body">{{ variables.equipment|default|nl2br }}</div>
			</div>
		</div>
		{% if variables.proficiencies_and_languages %}
		<div class="col-12 col-md-12 col-lg-6 of">
			<div class="card of">
				<div class="card-header">Proficiencies, Languages, and Talents</div>
				<div class="card-body">{{ variables.proficiencies_and_languages|nl2br }}</div>
			</div>
		</div>
		{% endif %}
		{% if variables.features_and_traits %}
		<div class="col-12 col-md-12 col-lg-12">
			<div class="card of">
				<div class="card-header">Features &amp; Traits</div>
				<div class="card-body">{{ variables.features_and_traits|nl2br }}</div>
			</div>
        </div>
		{% endif %}
		{% if sca != "NONE" %}
			{% if variables.spellcasting %}
			<div class="col-12 col-md-12 col-lg-12 of">
				<div class="card of">
					<div class="card-header">Spellcasting</div>
					<div class="card-body">{{ variables.spellcasting|nl2br }}</div>
					{% if variables.half_caster|default == '1' %}<br><br>Half-Rate Progression{% endif %}
				</div>
			</div>
			{% endif %}
		{% endif %}
		{% if variables.backstory %}
		<div class="col-12 col-md-6 col-lg-6">
			<div class="card of">
				<div class="card-header">Backstory</div>
				<div class="card-body">{{ variables.backstory|nl2br }}</div>
			</div>
		</div>
		{% endif %}
		{% if variables.allies %}
		<div class="col-12 col-md-6 col-lg-6">
			<div class="card of">
				<div class="card-header">Allies &amp; Organizations</div>
				<div class="card-body">{{ variables.allies|nl2br }}</div>
			</div>
        </div>
		{% endif %}
		{% if variables.motivation %}
		<div class="col-12 col-md-6 col-lg-6">
			<div class="card of">
				<div class="card-header">Adventuring Motivation</div>
				<div class="card-body">{{ variables.motivation|nl2br }}</div>
			</div>
        </div>
		{% endif %}
	</div>			
	{% if variables.notes %}
	<div class="row">
		<div class="col-12 col-md-12">
			<div class="card of">
				<div class="card-header">Notes</div>
				<div class="card-body">{{ variables.notes|nl2br }}</div>
			</div>
		</div>
	</div>			
	{% endif %}
	<div class="row">
		{% if variables.title1 and variables.custom1 %}
		<div class="col-12 col-md-12">
			<div class="card of">
				<div class="card-header">{{variables.title1}}</div>
				<div class="card-body">{{ variables.custom1|nl2br }}</div>
			</div>
		</div>
		{% endif %}
		{% if variables.title2 and variables.custom2 %}
		<div class="col-12 col-md-12">
			<div class="card of">
				<div class="card-header">{{variables.title2}}</div>
				<div class="card-body">{{ variables.custom2|nl2br }}</div>
			</div>
		</div>
		{% endif %}
	</div>			
    <div class="row do-not-print">
        <div class="col-12 text-center small">
				<br><br>
                &trade; &amp; &copy; Wizards of the Coast - <a href="/w/sheet-creation/a/sheet-list">D &amp; D 5e Character Sheet v3.04</a>, made by Tillerz - <a href="/w/sheet-creation/board/dungeons-and-dragons-5e-28202429">Updated: 2025-06-11</a><br><br>
				To print this sheet: Expand the spell book (if you have any entries there), then click "Print Sheet" at the top, select "Print to PDF" with a large format like A3.<br>Then print the resulting PDF to whichever format you need with "fit to page" selected.
        </div>
    </div>
</div>